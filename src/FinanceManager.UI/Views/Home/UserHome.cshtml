@using FinanceManager.UI.Models
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Web

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Title"];
    Layout = "_Layout";
}

<h1>@Localizer["Welcome"]</h1>

@if (ViewData.ContainsKey("ErrorAccountOperation"))
{
    <div class="alert alert-danger" role="alert">
        @Localizer[ViewData["ErrorAccountOperation"]?.ToString()??""]
    </div>
}
@if (ViewData.ContainsKey("SuccessAccountOperation"))
{
    <div class="alert alert-success" role="alert">
        @Localizer[ViewData["SuccessAccountOperation"]?.ToString()??""]
    </div>
}

<div class="d-flex justify-content-between">
    <p>@Localizer["MainMessage"]</p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAccountModal">@Localizer["AddAccount"]</button>
</div>


<div class="modal fade" id="addAccountModal" tabindex="-1" aria-labelledby="addAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addAccountModalLabel">@Localizer["AddAccount"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-account-form" class="needs-validation" action="/home/createaccount" method="post" novalidate>
                    <div class="mb-3">
                        <label for="add-account-name" class="col-form-label">@Localizer["Name"]</label>
                        <input type="text" class="form-control" id="add-account-name" name="name">
                        <div id="add-account-name-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                    <div class="mb-3">
                        <label for="account-description" class="col-form-label">@Localizer["Description"]</label>
                        <input type="text" class="form-control" id="add-account-description" name="description">
                        <div id="add-account-description-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                    <div class="mb-3">
                        <label for="account-amount" class="col-form-label">@Localizer["InitialAmount"]</label>
                        <input type="number" class="form-control" id="add-account-amount" name="amount" value="0.0" step="any">
                        <div id="add-account-amount-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                <button id="submit-add-account-form" type="button" class="btn btn-primary">@Localizer["AddAccount"]</button>
            </div>
        </div>
    </div>
</div>

<div class="list-group mt-4">
    @foreach (var account in (ViewData["Accounts"] as IEnumerable<AccountResponse>) ?? new List<AccountResponse>())
    {
        <a href="/account/index?accountId=@account.Id" class="list-group-item list-group-item-action TEST">
            <div class="d-flex w-100 justify-content-between">
                <h3 class="mb-1">@account.Name</h3>
                <div class="dropdown">
                    <i class="bi-gear btn" data-bs-toggle="dropdown"></i>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><span onclick="showModalModifyAccount('@account.Id', '@account.Name', '@account.Description')" class="dropdown-item">@Localizer["ModifyAccount"]</span></li>
                        <li><span onclick="showModalDeleteAccount('@account.Id')" class="dropdown-item">@Localizer["DeleteAccount"]</span></li>
                        <li><span onclick="showModalShareAccount('@account.Id')" class="dropdown-item">@Localizer["ShareAccount"]</span></li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <p class="col-7 mb-1">@account.Description</p>
                <p class="col-4 mb-1">@account.Amount</p>
            </div>
        </a>

    }
</div>

<div class="modal fade" id="modifyAccountModal" tabindex="-1" aria-labelledby="modifyAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="modifyAccountModalLabel">@Localizer["ModifyAccount"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="modify-account-form" class="needs-validation" action="/home/updateaccount" method="post" novalidate>
                    <div class="mb-3">
                        <label for="modify-account-name" class="col-form-label">@Localizer["Name"]</label>
                        <input type="text" class="form-control" id="modify-account-name" name="name">
                        <div id="modify-account-name-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                    <div class="mb-3">
                        <label for="modify-account-description" class="col-form-label">@Localizer["Description"]</label>
                        <input typw="text" class="form-control" id="modify-account-description" name="description">
                        <div id="modify-account-description-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                    <input type="hidden" class="form-control" id="modify-account-id" name="id">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                <button id="submit-modify-account-form" type="button" class="btn btn-primary">@Localizer["ModifyAccount"]</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteAccountModalLabel">@Localizer["DeleteAccountConfirmationTitle"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Localizer["DeleteAccountConfirmationMessage"]
                <form id="delete-account-form" class="needs-validation" action="/home/deleteaccount" method="post" novalidate>
                    <input type="hidden" class="form-control" id="delete-account-id" name="id">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["DeleteAccountConfirmationNegative"]</button>
                <button id="submit-delete-account-form" type="button" class="btn btn-danger">@Localizer["DeleteAccountConfirmationAffirmative"]</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="shareAccountModal" tabindex="-1" aria-labelledby="shareAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="shareAccountModalLabel">@Localizer["ShareAccount"]</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Localizer["ShareAccountMessage"]
                <form id="share-account-form" class="needs-validation" action="/home/shareaccount" method="post" novalidate>
                    <div class="mb-3">
                        <label for="share-account-email" class="col-form-label">@Localizer["Email"]</label>
                        <input type="text" class="form-control" id="share-account-email" name="email">
                        <div id="share-account-email-invalid-feedback" class="invalid-feedback"></div>
                    </div>
                    <input type="hidden" class="form-control" id="share-account-id" name="id">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                <button id="submit-share-account-form" type="button" class="btn btn-primary">@Localizer["ShareAccount"]</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        //form
        var add_account_form = document.getElementById("add-account-form");
        var add_account_button = document.getElementById("submit-add-account-form");
        var modify_account_form = document.getElementById("modify-account-form");
        var modify_account_button = document.getElementById("submit-modify-account-form");
        var delete_account_form = document.getElementById("delete-account-form");
        var delete_account_button = document.getElementById("submit-delete-account-form");
        var share_account_form = document.getElementById("share-account-form");
        var share_account_button = document.getElementById("submit-share-account-form");
        //inputs
        var add_account_name = document.getElementById("add-account-name");
        var add_account_description = document.getElementById("add-account-description");
        var add_account_amount = document.getElementById("add-account-amount");
        var modify_account_id = document.getElementById("modify-account-id");
        var modify_account_name = document.getElementById("modify-account-name");
        var modify_account_description = document.getElementById("modify-account-description");
        var delete_account_id = document.getElementById("delete-account-id");
        var share_account_email = document.getElementById("share-account-email");
        var share_account_id = document.getElementById("share-account-id");
        //messages
        var add_name_invalid_feedback = document.getElementById("add-account-name-invalid-feedback");
        var add_description_invalid_feedback = document.getElementById("add-account-description-invalid-feedback");
        var add_amount_invalid_feedback = document.getElementById("add-account-amount-invalid-feedback");
        var modify_name_invalid_feedback = document.getElementById("modify-account-name-invalid-feedback");
        var modify_description_invalid_feedback = document.getElementById("modify-account-description-invalid-feedback");
        var share_email_invalid_feedback = document.getElementById("share-account-email-invalid-feedback");

        //form validation
        function validateAddAccountForm() {
            var valid = true;

            add_account_name.setCustomValidity("");
            if (add_account_name.value == "") {
                add_account_name.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            }

            add_account_description.setCustomValidity("");
            if (add_account_description.value == "") {
                add_account_description.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            }

            add_account_amount.setCustomValidity("");
            if (add_account_amount.value == "") {
                add_account_amount.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            }

            add_account_name.parentNode.classList.add('was-validated');
            add_account_description.parentNode.classList.add('was-validated');
            add_account_amount.parentNode.classList.add('was-validated');
            add_name_invalid_feedback.innerText = add_account_name.validationMessage;
            add_description_invalid_feedback.innerText = add_account_description.validationMessage;
            add_amount_invalid_feedback.innerText = add_account_amount.validationMessage;

            return valid;
        }

        function validateModifyAccountForm() {
            var valid = true;

            modify_account_name.setCustomValidity("");
            if (modify_account_name.value == "") {
                modify_account_name.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            }

            modify_account_description.setCustomValidity("");
            if (modify_account_description.value == "") {
                modify_account_description.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            }

            modify_account_name.parentNode.classList.add('was-validated');
            modify_account_description.parentNode.classList.add('was-validated');
            modify_name_invalid_feedback.innerText = modify_account_name.validationMessage;
            modify_description_invalid_feedback.innerText = modify_account_description.validationMessage;

            return valid;
        }

        function validateShareAccountForm() {
            var valid = true;

            share_account_email.setCustomValidity("");
            if (share_account_email.value == "") {
                share_account_email.setCustomValidity("@Localizer["RequiredField"]");
                valid = false;
            } else if (!(/^[a-z0-9!'#$%&*+\/=?^_`{|}~-]+(?:\.[a-z0-9!'#$%&*+\/=?^_`{|}~-]+)*@@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-zA-Z]{2,}$/.test(share_account_email.value))) {
                share_account_email.setCustomValidity("@Localizer["InvalidFormat"]");
                valid = false;
            }

            share_account_email.parentNode.classList.add('was-validated');
            share_email_invalid_feedback.innerText = share_account_email.validationMessage;

            return valid;
        }

        //event listeners

        add_account_button.addEventListener('click', event => {
            if (!validateAddAccountForm()) {
                event.preventDefault();
                event.stopPropagation();
            } else {
                add_account_form.submit();
            }
        }, false);

        add_account_name.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateAddAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        add_account_description.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateAddAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        add_account_amount.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateAddAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        modify_account_button.addEventListener('click', event => {
            if (!validateModifyAccountForm()) {
                event.preventDefault();
                event.stopPropagation();
            } else {
                modify_account_form.submit();
            }
        }, false);

        modify_account_name.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateModifyAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        modify_account_description.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateModifyAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        delete_account_button.addEventListener('click', event => {
            delete_account_form.submit();
        }, false);

        share_account_button.addEventListener('click', event => {
            if (!validateShareAccountForm()) {
                event.preventDefault();
                event.stopPropagation();
            } else {
                share_account_form.submit();
            }
        }, false);

        share_account_email.addEventListener('keypress', event => {
            var keyPressed = event.keyCode || event.which;
            if (!validateShareAccountForm() && keyPressed === 13) {
                event.preventDefault();
                return false;
            }
        }, false);

        function showModalModifyAccount(accountId, accountName, accountDescription) {
            modify_account_id.value = accountId;
            modify_account_name.value = accountName;
            modify_account_description.value = accountDescription;
            $('#modifyAccountModal').modal('show');
            event.preventDefault();
        }

        function showModalDeleteAccount(accountId) {
            delete_account_id.value = accountId;
            $('#deleteAccountModal').modal('show');
            event.preventDefault();
        }

        function showModalShareAccount(accountId) {
            share_account_id.value = accountId;
            $('#shareAccountModal').modal('show');
            event.preventDefault();
        }
    </script>
}